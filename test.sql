PRAGMA foreign_keys=OFF;
BEGIN TRANSACTION;
CREATE TABLE IF NOT EXISTS "django_migrations" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "app" varchar(255) NOT NULL, "name" varchar(255) NOT NULL, "applied" datetime NOT NULL);
INSERT INTO django_migrations VALUES(1,'contenttypes','0001_initial','2020-03-15 10:00:12.880329');
INSERT INTO django_migrations VALUES(2,'auth','0001_initial','2020-03-15 10:00:13.010336');
INSERT INTO django_migrations VALUES(3,'admin','0001_initial','2020-03-15 10:00:13.151344');
INSERT INTO django_migrations VALUES(4,'admin','0002_logentry_remove_auto_add','2020-03-15 10:00:13.273351');
INSERT INTO django_migrations VALUES(5,'admin','0003_logentry_add_action_flag_choices','2020-03-15 10:00:13.404359');
INSERT INTO django_migrations VALUES(6,'contenttypes','0002_remove_content_type_name','2020-03-15 10:00:13.567368');
INSERT INTO django_migrations VALUES(7,'auth','0002_alter_permission_name_max_length','2020-03-15 10:00:13.676374');
INSERT INTO django_migrations VALUES(8,'auth','0003_alter_user_email_max_length','2020-03-15 10:00:13.859385');
INSERT INTO django_migrations VALUES(9,'auth','0004_alter_user_username_opts','2020-03-15 10:00:14.026395');
INSERT INTO django_migrations VALUES(10,'auth','0005_alter_user_last_login_null','2020-03-15 10:00:14.126400');
INSERT INTO django_migrations VALUES(11,'auth','0006_require_contenttypes_0002','2020-03-15 10:00:14.202405');
INSERT INTO django_migrations VALUES(12,'auth','0007_alter_validators_add_error_messages','2020-03-15 10:00:14.304410');
INSERT INTO django_migrations VALUES(13,'auth','0008_alter_user_username_max_length','2020-03-15 10:00:14.443418');
INSERT INTO django_migrations VALUES(14,'auth','0009_alter_user_last_name_max_length','2020-03-15 10:00:14.549424');
INSERT INTO django_migrations VALUES(15,'auth','0010_alter_group_name_max_length','2020-03-15 10:00:14.657431');
INSERT INTO django_migrations VALUES(16,'auth','0011_update_proxy_permissions','2020-03-15 10:00:14.771437');
INSERT INTO django_migrations VALUES(17,'blog','0001_initial','2020-03-15 10:00:14.910445');
INSERT INTO django_migrations VALUES(18,'sessions','0001_initial','2020-03-15 10:00:15.033452');
INSERT INTO django_migrations VALUES(19,'blog','0002_auto_20200317_2038','2020-04-21 15:01:07.145005');
CREATE TABLE IF NOT EXISTS "auth_group_permissions" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "group_id" integer NOT NULL REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED, "permission_id" integer NOT NULL REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED);
CREATE TABLE IF NOT EXISTS "auth_user_groups" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "user_id" integer NOT NULL REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED, "group_id" integer NOT NULL REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED);
CREATE TABLE IF NOT EXISTS "auth_user_user_permissions" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "user_id" integer NOT NULL REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED, "permission_id" integer NOT NULL REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED);
CREATE TABLE IF NOT EXISTS "django_admin_log" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "action_time" datetime NOT NULL, "object_id" text NULL, "object_repr" varchar(200) NOT NULL, "change_message" text NOT NULL, "content_type_id" integer NULL REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED, "user_id" integer NOT NULL REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED, "action_flag" smallint unsigned NOT NULL CHECK ("action_flag" >= 0));
INSERT INTO django_admin_log VALUES(1,'2020-03-15 13:56:49.577334','1','qqq','[{"added": {}}]',10,1,1);
INSERT INTO django_admin_log VALUES(2,'2020-03-15 13:57:40.098223','1','1','[{"added": {}}]',11,1,1);
INSERT INTO django_admin_log VALUES(3,'2020-03-15 13:57:49.293749','1','huang','[{"added": {}}]',12,1,1);
INSERT INTO django_admin_log VALUES(4,'2020-03-15 14:28:25.506775','2','测试python','[{"added": {}}]',12,1,1);
INSERT INTO django_admin_log VALUES(5,'2020-03-15 22:32:55.894240','3','富文本测试','[{"added": {}}]',12,1,1);
INSERT INTO django_admin_log VALUES(6,'2020-03-16 20:41:09.260481','2','22222','[{"added": {}}]',10,1,1);
INSERT INTO django_admin_log VALUES(7,'2020-03-16 20:41:46.813924','4','111111','[{"added": {}}]',12,1,1);
INSERT INTO django_admin_log VALUES(8,'2020-03-17 14:06:06.761549','2','热门推荐','[{"added": {}}]',11,1,1);
INSERT INTO django_admin_log VALUES(9,'2020-03-17 19:24:36.242120','5','传说','[{"added": {}}]',12,1,1);
INSERT INTO django_admin_log VALUES(10,'2020-03-17 19:28:07.977230','5','黄进1','[{"added": {}}]',7,1,1);
INSERT INTO django_admin_log VALUES(11,'2020-03-17 19:28:34.063723','6','黄进2','[{"added": {}}]',7,1,1);
INSERT INTO django_admin_log VALUES(12,'2020-03-17 19:28:59.484177','7','黄进3','[{"added": {}}]',7,1,1);
INSERT INTO django_admin_log VALUES(13,'2020-03-17 19:29:30.064926','8','黄进4','[{"added": {}}]',7,1,1);
INSERT INTO django_admin_log VALUES(14,'2020-03-17 20:06:29.214854','3','mysql','[{"added": {}}]',10,1,1);
INSERT INTO django_admin_log VALUES(15,'2020-03-17 20:07:33.716543','6','mysql','[{"added": {}}]',12,1,1);
CREATE TABLE IF NOT EXISTS "django_content_type" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL);
INSERT INTO django_content_type VALUES(1,'admin','logentry');
INSERT INTO django_content_type VALUES(2,'auth','permission');
INSERT INTO django_content_type VALUES(3,'auth','group');
INSERT INTO django_content_type VALUES(4,'auth','user');
INSERT INTO django_content_type VALUES(5,'contenttypes','contenttype');
INSERT INTO django_content_type VALUES(6,'sessions','session');
INSERT INTO django_content_type VALUES(7,'blog','banner');
INSERT INTO django_content_type VALUES(8,'blog','category');
INSERT INTO django_content_type VALUES(9,'blog','link');
INSERT INTO django_content_type VALUES(10,'blog','tag');
INSERT INTO django_content_type VALUES(11,'blog','tui');
INSERT INTO django_content_type VALUES(12,'blog','article');
CREATE TABLE IF NOT EXISTS "auth_permission" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "content_type_id" integer NOT NULL REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED, "codename" varchar(100) NOT NULL, "name" varchar(255) NOT NULL);
INSERT INTO auth_permission VALUES(1,1,'add_logentry','Can add log entry');
INSERT INTO auth_permission VALUES(2,1,'change_logentry','Can change log entry');
INSERT INTO auth_permission VALUES(3,1,'delete_logentry','Can delete log entry');
INSERT INTO auth_permission VALUES(4,1,'view_logentry','Can view log entry');
INSERT INTO auth_permission VALUES(5,2,'add_permission','Can add permission');
INSERT INTO auth_permission VALUES(6,2,'change_permission','Can change permission');
INSERT INTO auth_permission VALUES(7,2,'delete_permission','Can delete permission');
INSERT INTO auth_permission VALUES(8,2,'view_permission','Can view permission');
INSERT INTO auth_permission VALUES(9,3,'add_group','Can add group');
INSERT INTO auth_permission VALUES(10,3,'change_group','Can change group');
INSERT INTO auth_permission VALUES(11,3,'delete_group','Can delete group');
INSERT INTO auth_permission VALUES(12,3,'view_group','Can view group');
INSERT INTO auth_permission VALUES(13,4,'add_user','Can add user');
INSERT INTO auth_permission VALUES(14,4,'change_user','Can change user');
INSERT INTO auth_permission VALUES(15,4,'delete_user','Can delete user');
INSERT INTO auth_permission VALUES(16,4,'view_user','Can view user');
INSERT INTO auth_permission VALUES(17,5,'add_contenttype','Can add content type');
INSERT INTO auth_permission VALUES(18,5,'change_contenttype','Can change content type');
INSERT INTO auth_permission VALUES(19,5,'delete_contenttype','Can delete content type');
INSERT INTO auth_permission VALUES(20,5,'view_contenttype','Can view content type');
INSERT INTO auth_permission VALUES(21,6,'add_session','Can add session');
INSERT INTO auth_permission VALUES(22,6,'change_session','Can change session');
INSERT INTO auth_permission VALUES(23,6,'delete_session','Can delete session');
INSERT INTO auth_permission VALUES(24,6,'view_session','Can view session');
INSERT INTO auth_permission VALUES(25,7,'add_banner','Can add 轮播图');
INSERT INTO auth_permission VALUES(26,7,'change_banner','Can change 轮播图');
INSERT INTO auth_permission VALUES(27,7,'delete_banner','Can delete 轮播图');
INSERT INTO auth_permission VALUES(28,7,'view_banner','Can view 轮播图');
INSERT INTO auth_permission VALUES(29,8,'add_category','Can add 博客分类');
INSERT INTO auth_permission VALUES(30,8,'change_category','Can change 博客分类');
INSERT INTO auth_permission VALUES(31,8,'delete_category','Can delete 博客分类');
INSERT INTO auth_permission VALUES(32,8,'view_category','Can view 博客分类');
INSERT INTO auth_permission VALUES(33,9,'add_link','Can add 友情链接');
INSERT INTO auth_permission VALUES(34,9,'change_link','Can change 友情链接');
INSERT INTO auth_permission VALUES(35,9,'delete_link','Can delete 友情链接');
INSERT INTO auth_permission VALUES(36,9,'view_link','Can view 友情链接');
INSERT INTO auth_permission VALUES(37,10,'add_tag','Can add 文章标签');
INSERT INTO auth_permission VALUES(38,10,'change_tag','Can change 文章标签');
INSERT INTO auth_permission VALUES(39,10,'delete_tag','Can delete 文章标签');
INSERT INTO auth_permission VALUES(40,10,'view_tag','Can view 文章标签');
INSERT INTO auth_permission VALUES(41,11,'add_tui','Can add 推荐位');
INSERT INTO auth_permission VALUES(42,11,'change_tui','Can change 推荐位');
INSERT INTO auth_permission VALUES(43,11,'delete_tui','Can delete 推荐位');
INSERT INTO auth_permission VALUES(44,11,'view_tui','Can view 推荐位');
INSERT INTO auth_permission VALUES(45,12,'add_article','Can add article');
INSERT INTO auth_permission VALUES(46,12,'change_article','Can change article');
INSERT INTO auth_permission VALUES(47,12,'delete_article','Can delete article');
INSERT INTO auth_permission VALUES(48,12,'view_article','Can view article');
CREATE TABLE IF NOT EXISTS "auth_user" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "password" varchar(128) NOT NULL, "last_login" datetime NULL, "is_superuser" bool NOT NULL, "username" varchar(150) NOT NULL UNIQUE, "first_name" varchar(30) NOT NULL, "email" varchar(254) NOT NULL, "is_staff" bool NOT NULL, "is_active" bool NOT NULL, "date_joined" datetime NOT NULL, "last_name" varchar(150) NOT NULL);
INSERT INTO auth_user VALUES(1,'pbkdf2_sha256$150000$hOr5oCvmoaU0$beI11b3YPrJpdmvZ4qkesP2YK2cEGZ9hXsqOkvCCk38=','2021-07-31 15:41:16.749146',1,'admin','','1228735902@qq.com',1,1,'2020-03-15 10:03:20.113038','');
CREATE TABLE IF NOT EXISTS "auth_group" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(150) NOT NULL UNIQUE);
CREATE TABLE IF NOT EXISTS "blog_banner" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "text_info" varchar(50) NOT NULL, "img" varchar(100) NOT NULL, "link_url" varchar(100) NOT NULL, "is_active" bool NOT NULL);
INSERT INTO blog_banner VALUES(1,'Django身份认证系统auth模块详解','wpress1.jpg','https://www.django.cn/article/show-11.html',0);
INSERT INTO blog_banner VALUES(2,'如何扩展Django用户模型','wpress2.jpg','https://www.django.cn/article/show-11.html',0);
INSERT INTO blog_banner VALUES(3,'创建自己的第一个django项目','wpress3.jpg','https://www.django.cn/article/show-11.html',0);
INSERT INTO blog_banner VALUES(4,'存储测试一下','wpress4.jpg','https://www.django.cn/article/show-11.html',0);
INSERT INTO blog_banner VALUES(5,'黄进1','banner/3d房间win7.jpg','http://127.0.0.1:8000/show-5.html',1);
INSERT INTO blog_banner VALUES(6,'黄进2','banner/爱你一生win7.jpg','http://127.0.0.1:8000/show-2.html',1);
INSERT INTO blog_banner VALUES(7,'黄进3','banner/旋涡幻紫win7.jpg','http://127.0.0.1:8000/show-3.html',1);
INSERT INTO blog_banner VALUES(8,'黄进4','banner/水中盛开的荷花Win7.jpg','http://127.0.0.1:8000/show-4.html',1);
CREATE TABLE IF NOT EXISTS "blog_category" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(100) NOT NULL, "index" integer NOT NULL);
INSERT INTO blog_category VALUES(1,'Django',1);
INSERT INTO blog_category VALUES(2,'Python',2);
INSERT INTO blog_category VALUES(3,'Linux',3);
INSERT INTO blog_category VALUES(4,'Mysql',4);
INSERT INTO blog_category VALUES(5,'运维知识',5);
INSERT INTO blog_category VALUES(6,'我的日记',6);
CREATE TABLE IF NOT EXISTS "blog_link" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(20) NOT NULL, "linkurl" varchar(100) NOT NULL);
INSERT INTO blog_link VALUES(1,'百度','https://www.baidu.com/');
CREATE TABLE IF NOT EXISTS "blog_tag" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(100) NOT NULL);
INSERT INTO blog_tag VALUES(1,'Python');
INSERT INTO blog_tag VALUES(2,'Django');
INSERT INTO blog_tag VALUES(3,'mysql');
CREATE TABLE IF NOT EXISTS "blog_tui" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(100) NOT NULL);
INSERT INTO blog_tui VALUES(1,'首页推荐');
INSERT INTO blog_tui VALUES(2,'热门推荐');
CREATE TABLE IF NOT EXISTS "blog_article_tags" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "article_id" integer NOT NULL REFERENCES "blog_article" ("id") DEFERRABLE INITIALLY DEFERRED, "tag_id" integer NOT NULL REFERENCES "blog_tag" ("id") DEFERRABLE INITIALLY DEFERRED);
INSERT INTO blog_article_tags VALUES(1,1,1);
INSERT INTO blog_article_tags VALUES(2,4,2);
INSERT INTO blog_article_tags VALUES(3,5,2);
INSERT INTO blog_article_tags VALUES(4,6,3);
CREATE TABLE IF NOT EXISTS "django_session" ("session_key" varchar(40) NOT NULL PRIMARY KEY, "session_data" text NOT NULL, "expire_date" datetime NOT NULL);
INSERT INTO django_session VALUES('g1i9r4su6h48wvhv52kgc3p8k1owjpk9','MWNhNzNjY2QyY2VhNTFlYmIwZGJmMTQ4MDM4NzE1MzhiZmU4NmY0Zjp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiJiNGU3NGQ3ODc2NDcxMjE2NjVhNjYwYjFiNzRkNmExOGI0YTZmM2VmIn0=','2020-03-31 20:05:37.154876');
INSERT INTO django_session VALUES('elpcwtxdpjs9s8o8k63a7p4xu28urc75','NjEwYzc2NmM2NDY2MjVhZjAwMDYxZWU2NWQ1M2U1ZTJhNzFlNjFhNTp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiIzNTg3NmFhMGI1NDk0OTQyNGFiMWQwZWE2NzE4MGU5YzlhYjE1NTk5In0=','2020-05-05 15:00:31.624005');
INSERT INTO django_session VALUES('vkx8nctyn9lpvpw7xaz2cwwatcc0rl2v','YTExNDg5NjMwOTUxMWQyNDk3ZjZkMTVmZjNkNTQwNTY3NTdjOGNhMjp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiIzOTVkZWZkYWQ5M2UyNDYxOWU1MWNiN2JiNGMyY2EzY2U3OTJkNTQyIn0=','2021-08-14 15:41:16.753035');
CREATE TABLE IF NOT EXISTS "blog_article" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "title" varchar(70) NOT NULL, "excerpt" text NOT NULL, "img" varchar(100) NULL, "views" integer unsigned NOT NULL CHECK ("views" >= 0), "created_time" datetime NOT NULL, "modified_time" datetime NOT NULL, "category_id" integer NULL REFERENCES "blog_category" ("id") DEFERRABLE INITIALLY DEFERRED, "tui_id" integer NULL REFERENCES "blog_tui" ("id") DEFERRABLE INITIALLY DEFERRED, "user_id" integer NOT NULL REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED, "body" text NOT NULL);
INSERT INTO blog_article VALUES(1,'huang','ceshi','article_img/2020/03/15/psb.jpg',26,'2020-03-15 13:57:49.262747','2021-07-24 10:26:32.964000',2,2,1,'<p>xcasdfasdf</p><p>asdfasdf<img src="/media/upimg/psb_20200315215717_604.jpg" title="" alt="psb.jpg"/></p><p>ce</p><p>测试一个重要事情</p>');
INSERT INTO blog_article VALUES(2,'测试python','请原谅我的无知','article_img/2020/03/15/xkj5bosvrguxkj5bosvrgu.jpg',16,'2020-03-15 14:28:25.501774','2021-07-28 13:02:04.458622',2,2,1,'<p>请原谅我的无知</p><p><br/></p><p>误会</p><p><br/></p><p><br/></p><p><img src="/media/upimg/xk24_1600_20200315222803_265.jpg" title="" alt="xk24_1600.jpg"/></p><p>这个东西真的是太大了呀</p>');
INSERT INTO blog_article VALUES(3,'富文本测试','真是 写文档特别累啊','article_img/2020/03/15/a8d7e8d0d22228affb91fc89d820ca8f.jpg',11,'2020-03-15 22:32:55.892240','2021-07-24 10:26:31.355000',5,2,1,'<p>这个是测试，我知道我的文章写的并不好，</p><p>但是这不是现在的重点，</p><p>迟早有一天，我可以写的很好的</p><p><img src="/media/upimg/psb_20200315223245_530.jpg" title="" alt="psb.jpg"/></p>');
INSERT INTO blog_article VALUES(4,'111111','1111','article_img/2020/03/16/445d1daee55f812fcdf993fcf6efa4d8.jpg',12,'2020-03-16 20:41:46.811924','2021-07-24 10:26:28.206000',6,2,1,'<p>ahusdasndfad<br/></p><p><br/></p><p><br/></p><p>asda</p><p><br/></p><p><br/></p><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p><br/></p>');
INSERT INTO blog_article VALUES(5,'传说','这也是一个测试文档摘要','article_img/2020/03/17/爱你一生win7.jpg',13,'2020-03-17 19:24:36.219119','2020-04-11 16:03:37.489013',3,1,1,'<p>爱你一生网页<br/></p><p><br/></p><p>啊</p><p>之前我在csdn的时候也是用这种富文本工具写的文档，</p><p>现在也是，所以还是觉得可以的</p>');
INSERT INTO blog_article VALUES(6,'mysql','记录一些知识点','article_img/2020/03/17/China.jpg',2,'2020-03-17 20:07:33.688541','2021-07-24 10:26:38.484000',4,1,1,'<p>记录着文章是否可以导出</p><p><br/></p><h2 style="border: 0px; margin: 2px 0px; padding: 0px; font-size: 1.8em; line-height: 1.8em; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);">数值类型</h2><p style="border: 0px; margin-top: 0px; margin-bottom: 0px; padding: 0px; line-height: 2em; overflow-wrap: break-word; word-break: break-all; font-size: 13px; font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; color: rgb(51, 51, 51); white-space: normal; background-color: rgb(255, 255, 255);">MySQL支持所有标准SQL数值数据类型。</p><p style="border: 0px; margin-top: 0px; margin-bottom: 0px; padding: 0px; line-height: 2em; overflow-wrap: break-word; word-break: break-all; font-size: 13px; font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; color: rgb(51, 51, 51); white-space: normal; background-color: rgb(255, 255, 255);">这些类型包括严格数值数据类型(INTEGER、SMALLINT、DECIMAL和NUMERIC)，以及近似数值数据类型(FLOAT、REAL和DOUBLE PRECISION)。</p><p style="border: 0px; margin-top: 0px; margin-bottom: 0px; padding: 0px; line-height: 2em; overflow-wrap: break-word; word-break: break-all; font-size: 13px; font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; color: rgb(51, 51, 51); white-space: normal; background-color: rgb(255, 255, 255);">关键字INT是INTEGER的同义词，关键字DEC是DECIMAL的同义词。</p><p style="border: 0px; margin-top: 0px; margin-bottom: 0px; padding: 0px; line-height: 2em; overflow-wrap: break-word; word-break: break-all; font-size: 13px; font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; color: rgb(51, 51, 51); white-space: normal; background-color: rgb(255, 255, 255);">BIT数据类型保存位字段值，并且支持MyISAM、MEMORY、InnoDB和BDB表。</p><p style="border: 0px; margin-top: 0px; margin-bottom: 0px; padding: 0px; line-height: 2em; overflow-wrap: break-word; word-break: break-all; font-size: 13px; font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; color: rgb(51, 51, 51); white-space: normal; background-color: rgb(255, 255, 255);">作为SQL标准的扩展，MySQL也支持整数类型TINYINT、MEDIUMINT和BIGINT。下面的表显示了需要的每个整数类型的存储和范围。</p><table class="reference" width="833" style="width: 768px;"><tbody style="border: 0px; margin: 0px; padding: 0px;"><tr style="border: 0px; margin: 0px; padding: 0px; background-color: rgb(246, 244, 240);" class="firstRow"><th width="10%" style="border-color: rgb(85, 85, 85); margin: 0px; padding: 3px; color: rgb(255, 255, 255); background-color: rgb(85, 85, 85); vertical-align: top; text-align: left;">类型</th><th width="15%" style="border-color: rgb(85, 85, 85); margin: 0px; padding: 3px; color: rgb(255, 255, 255); background-color: rgb(85, 85, 85); vertical-align: top; text-align: left;">大小</th><th width="30%" style="border-color: rgb(85, 85, 85); margin: 0px; padding: 3px; color: rgb(255, 255, 255); background-color: rgb(85, 85, 85); vertical-align: top; text-align: left;">范围（有符号）</th><th width="30%" style="border-color: rgb(85, 85, 85); margin: 0px; padding: 3px; color: rgb(255, 255, 255); background-color: rgb(85, 85, 85); vertical-align: top; text-align: left;">范围（无符号）</th><th width="15%" style="border-color: rgb(85, 85, 85); margin: 0px; padding: 3px; color: rgb(255, 255, 255); background-color: rgb(85, 85, 85); vertical-align: top; text-align: left;">用途</th></tr><tr style="border: 0px; margin: 0px; padding: 0px;"><td style="border-color: rgb(212, 212, 212); margin: 0px; padding: 7px 5px; font-size: 13px; min-width: 24px; line-height: 2em; vertical-align: top;">TINYINT</td><td style="border-color: rgb(212, 212, 212); margin: 0px; padding: 7px 5px; font-size: 13px; line-height: 2em; min-width: 24px; vertical-align: top;">1 字节</td><td style="border-color: rgb(212, 212, 212); margin: 0px; padding: 7px 5px; font-size: 13px; line-height: 2em; min-width: 24px; vertical-align: top;">(-128，127)</td><td style="border-color: rgb(212, 212, 212); margin: 0px; padding: 7px 5px; font-size: 13px; line-height: 2em; min-width: 24px; vertical-align: top;">(0，255)</td><td style="border-color: rgb(212, 212, 212); margin: 0px; padding: 7px 5px; font-size: 13px; line-height: 2em; min-width: 24px; vertical-align: top;">小整数值</td></tr><tr style="border: 0px; margin: 0px; padding: 0px; background-color: rgb(246, 244, 240);"><td style="border-color: rgb(212, 212, 212); margin: 0px; padding: 7px 5px; font-size: 13px; min-width: 24px; line-height: 2em; vertical-align: top;">SMALLINT</td><td style="border-color: rgb(212, 212, 212); margin: 0px; padding: 7px 5px; font-size: 13px; line-height: 2em; min-width: 24px; vertical-align: top;">2 字节</td><td style="border-color: rgb(212, 212, 212); margin: 0px; padding: 7px 5px; font-size: 13px; line-height: 2em; min-width: 24px; vertical-align: top;">(-32 768，32 767)</td><td style="border-color: rgb(212, 212, 212); margin: 0px; padding: 7px 5px; font-size: 13px; line-height: 2em; min-width: 24px; vertical-align: top;">(0，65 535)</td><td style="border-color: rgb(212, 212, 212); margin: 0px; padding: 7px 5px; font-size: 13px; line-height: 2em; min-width: 24px; vertical-align: top;">大整数值</td></tr><tr style="border: 0px; margin: 0px; padding: 0px;"><td style="border-color: rgb(212, 212, 212); margin: 0px; padding: 7px 5px; font-size: 13px; min-width: 24px; line-height: 2em; vertical-align: top;">MEDIUMINT</td><td style="border-color: rgb(212, 212, 212); margin: 0px; padding: 7px 5px; font-size: 13px; line-height: 2em; min-width: 24px; vertical-align: top;">3 字节</td><td style="border-color: rgb(212, 212, 212); margin: 0px; padding: 7px 5px; font-size: 13px; line-height: 2em; min-width: 24px; vertical-align: top;">(-8 388 608，8 388 607)</td><td style="border-color: rgb(212, 212, 212); margin: 0px; padding: 7px 5px; font-size: 13px; line-height: 2em; min-width: 24px; vertical-align: top;">(0，16 777 215)</td><td style="border-color: rgb(212, 212, 212); margin: 0px; padding: 7px 5px; font-size: 13px; line-height: 2em; min-width: 24px; vertical-align: top;">大整数值</td></tr><tr style="border: 0px; margin: 0px; padding: 0px; background-color: rgb(246, 244, 240);"><td style="border-color: rgb(212, 212, 212); margin: 0px; padding: 7px 5px; font-size: 13px; min-width: 24px; line-height: 2em; vertical-align: top;">INT或INTEGER</td><td style="border-color: rgb(212, 212, 212); margin: 0px; padding: 7px 5px; font-size: 13px; line-height: 2em; min-width: 24px; vertical-align: top;">4 字节</td><td style="border-color: rgb(212, 212, 212); margin: 0px; padding: 7px 5px; font-size: 13px; line-height: 2em; min-width: 24px; vertical-align: top;">(-2 147 483 648，2 147 483 647)</td><td style="border-color: rgb(212, 212, 212); margin: 0px; padding: 7px 5px; font-size: 13px; line-height: 2em; min-width: 24px; vertical-align: top;">(0，4 294 967 295)</td><td style="border-color: rgb(212, 212, 212); margin: 0px; padding: 7px 5px; font-size: 13px; line-height: 2em; min-width: 24px; vertical-align: top;">大整数值</td></tr><tr style="border: 0px; margin: 0px; padding: 0px;"><td style="border-color: rgb(212, 212, 212); margin: 0px; padding: 7px 5px; font-size: 13px; min-width: 24px; line-height: 2em; vertical-align: top;">BIGINT</td><td style="border-color: rgb(212, 212, 212); margin: 0px; padding: 7px 5px; font-size: 13px; line-height: 2em; min-width: 24px; vertical-align: top;">8 字节</td><td style="border-color: rgb(212, 212, 212); margin: 0px; padding: 7px 5px; font-size: 13px; line-height: 2em; min-width: 24px; vertical-align: top;">(-9,223,372,036,854,775,808，9 223 372 036 854 775 807)</td><td style="border-color: rgb(212, 212, 212); margin: 0px; padding: 7px 5px; font-size: 13px; line-height: 2em; min-width: 24px; vertical-align: top;">(0，18 446 744 073 709 551 615)</td><td style="border-color: rgb(212, 212, 212); margin: 0px; padding: 7px 5px; font-size: 13px; line-height: 2em; min-width: 24px; vertical-align: top;">极大整数值</td></tr><tr style="border: 0px; margin: 0px; padding: 0px; background-color: rgb(246, 244, 240);"><td style="border-color: rgb(212, 212, 212); margin: 0px; padding: 7px 5px; font-size: 13px; min-width: 24px; line-height: 2em; vertical-align: top;">FLOAT</td><td style="border-color: rgb(212, 212, 212); margin: 0px; padding: 7px 5px; font-size: 13px; line-height: 2em; min-width: 24px; vertical-align: top;">4 字节</td><td style="border-color: rgb(212, 212, 212); margin: 0px; padding: 7px 5px; font-size: 13px; line-height: 2em; min-width: 24px; vertical-align: top;">(-3.402 823 466 E+38，-1.175 494 351 E-38)，0，(1.175 494 351 E-38，3.402 823 466 351 E+38)</td><td style="border-color: rgb(212, 212, 212); margin: 0px; padding: 7px 5px; font-size: 13px; line-height: 2em; min-width: 24px; vertical-align: top;">0，(1.175 494 351 E-38，3.402 823 466 E+38)</td><td style="border-color: rgb(212, 212, 212); margin: 0px; padding: 7px 5px; font-size: 13px; line-height: 2em; min-width: 24px; vertical-align: top;">单精度<br/>浮点数值</td></tr><tr style="border: 0px; margin: 0px; padding: 0px;"><td style="border-color: rgb(212, 212, 212); margin: 0px; padding: 7px 5px; font-size: 13px; min-width: 24px; line-height: 2em; vertical-align: top;">DOUBLE</td><td style="border-color: rgb(212, 212, 212); margin: 0px; padding: 7px 5px; font-size: 13px; line-height: 2em; min-width: 24px; vertical-align: top;">8 字节</td><td style="border-color: rgb(212, 212, 212); margin: 0px; padding: 7px 5px; font-size: 13px; line-height: 2em; min-width: 24px; vertical-align: top;">(-1.797 693 134 862 315 7 E+308，-2.225 073 858 507 201 4 E-308)，0，(2.225 073 858 507 201 4 E-308，1.797 693 134 862 315 7 E+308)</td><td style="border-color: rgb(212, 212, 212); margin: 0px; padding: 7px 5px; font-size: 13px; line-height: 2em; min-width: 24px; vertical-align: top;">0，(2.225 073 858 507 201 4 E-308，1.797 693 134 862 315 7 E+308)</td><td style="border-color: rgb(212, 212, 212); margin: 0px; padding: 7px 5px; font-size: 13px; line-height: 2em; min-width: 24px; vertical-align: top;">双精度<br/>浮点数值</td></tr><tr style="border: 0px; margin: 0px; padding: 0px; background-color: rgb(246, 244, 240);"><td style="border-color: rgb(212, 212, 212); margin: 0px; padding: 7px 5px; font-size: 13px; min-width: 24px; line-height: 2em; vertical-align: top;">DECIMAL</td><td style="border-color: rgb(212, 212, 212); margin: 0px; padding: 7px 5px; font-size: 13px; line-height: 2em; min-width: 24px; vertical-align: top;">对DECIMAL(M,D) ，如果M&gt;D，为M+2否则为D+2</td><td style="border-color: rgb(212, 212, 212); margin: 0px; padding: 7px 5px; font-size: 13px; line-height: 2em; min-width: 24px; vertical-align: top;">依赖于M和D的值</td><td style="border-color: rgb(212, 212, 212); margin: 0px; padding: 7px 5px; font-size: 13px; line-height: 2em; min-width: 24px; vertical-align: top;">依赖于M和D的值</td><td style="border-color: rgb(212, 212, 212); margin: 0px; padding: 7px 5px; font-size: 13px; line-height: 2em; min-width: 24px; vertical-align: top;">小数值</td></tr></tbody></table><hr style="background-color: rgb(212, 212, 212); color: rgb(212, 212, 212); height: 1px; border: 0px; clear: both; font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; font-size: 12px; white-space: normal;"/><h2 style="border: 0px; margin: 2px 0px; padding: 0px; font-size: 1.8em; line-height: 1.8em; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);">日期和时间类型</h2><p style="border: 0px; margin-top: 0px; margin-bottom: 0px; padding: 0px; line-height: 2em; overflow-wrap: break-word; word-break: break-all; font-size: 13px; font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; color: rgb(51, 51, 51); white-space: normal; background-color: rgb(255, 255, 255);">表示时间值的日期和时间类型为DATETIME、DATE、TIMESTAMP、TIME和YEAR。</p><p style="border: 0px; margin-top: 0px; margin-bottom: 0px; padding: 0px; line-height: 2em; overflow-wrap: break-word; word-break: break-all; font-size: 13px; font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; color: rgb(51, 51, 51); white-space: normal; background-color: rgb(255, 255, 255);">每个时间类型有一个有效值范围和一个&quot;零&quot;值，当指定不合法的MySQL不能表示的值时使用&quot;零&quot;值。</p><p style="border: 0px; margin-top: 0px; margin-bottom: 0px; padding: 0px; line-height: 2em; overflow-wrap: break-word; word-break: break-all; font-size: 13px; font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; color: rgb(51, 51, 51); white-space: normal; background-color: rgb(255, 255, 255);">TIMESTAMP类型有专有的自动更新特性，将在后面描述。</p><table class="reference" width="833" style="width: 768px;"><tbody style="border: 0px; margin: 0px; padding: 0px;"><tr style="border: 0px; margin: 0px; padding: 0px; background-color: rgb(246, 244, 240);" class="firstRow"><th width="10%" style="border-color: rgb(85, 85, 85); margin: 0px; padding: 3px; color: rgb(255, 255, 255); background-color: rgb(85, 85, 85); vertical-align: top; text-align: left;">类型</th><th width="10%" style="border-color: rgb(85, 85, 85); margin: 0px; padding: 3px; color: rgb(255, 255, 255); background-color: rgb(85, 85, 85); vertical-align: top; text-align: left;">大小<br/>(字节)</th><th width="40%" style="border-color: rgb(85, 85, 85); margin: 0px; padding: 3px; color: rgb(255, 255, 255); background-color: rgb(85, 85, 85); vertical-align: top; text-align: left;">范围</th><th width="20%" style="border-color: rgb(85, 85, 85); margin: 0px; padding: 3px; color: rgb(255, 255, 255); background-color: rgb(85, 85, 85); vertical-align: top; text-align: left;">格式</th><th style="border-color: rgb(85, 85, 85); margin: 0px; padding: 3px; color: rgb(255, 255, 255); background-color: rgb(85, 85, 85); vertical-align: top; text-align: left;">用途</th></tr><tr style="border: 0px; margin: 0px; padding: 0px;"><td width="10%" style="border-color: rgb(212, 212, 212); margin: 0px; padding: 7px 5px; font-size: 13px; min-width: 24px; line-height: 2em; vertical-align: top;">DATE</td><td width="10%" style="border-color: rgb(212, 212, 212); margin: 0px; padding: 7px 5px; font-size: 13px; line-height: 2em; min-width: 24px; vertical-align: top;">3</td><td style="border-color: rgb(212, 212, 212); margin: 0px; padding: 7px 5px; font-size: 13px; line-height: 2em; min-width: 24px; vertical-align: top;">1000-01-01/9999-12-31</td><td style="border-color: rgb(212, 212, 212); margin: 0px; padding: 7px 5px; font-size: 13px; line-height: 2em; min-width: 24px; vertical-align: top;">YYYY-MM-DD</td><td style="border-color: rgb(212, 212, 212); margin: 0px; padding: 7px 5px; font-size: 13px; line-height: 2em; min-width: 24px; vertical-align: top;">日期值</td></tr><tr style="border: 0px; margin: 0px; padding: 0px; background-color: rgb(246, 244, 240);"><td width="10%" style="border-color: rgb(212, 212, 212); margin: 0px; padding: 7px 5px; font-size: 13px; min-width: 24px; line-height: 2em; vertical-align: top;">TIME</td><td width="10%" style="border-color: rgb(212, 212, 212); margin: 0px; padding: 7px 5px; font-size: 13px; line-height: 2em; min-width: 24px; vertical-align: top;">3</td><td style="border-color: rgb(212, 212, 212); margin: 0px; padding: 7px 5px; font-size: 13px; line-height: 2em; min-width: 24px; vertical-align: top;">&#39;-838:59:59&#39;/&#39;838:59:59&#39;</td><td style="border-color: rgb(212, 212, 212); margin: 0px; padding: 7px 5px; font-size: 13px; line-height: 2em; min-width: 24px; vertical-align: top;">HH:MM:SS</td><td style="border-color: rgb(212, 212, 212); margin: 0px; padding: 7px 5px; font-size: 13px; line-height: 2em; min-width: 24px; vertical-align: top;">时间值或持续时间</td></tr><tr style="border: 0px; margin: 0px; padding: 0px;"><td width="10%" style="border-color: rgb(212, 212, 212); margin: 0px; padding: 7px 5px; font-size: 13px; min-width: 24px; line-height: 2em; vertical-align: top;">YEAR</td><td width="10%" style="border-color: rgb(212, 212, 212); margin: 0px; padding: 7px 5px; font-size: 13px; line-height: 2em; min-width: 24px; vertical-align: top;">1</td><td style="border-color: rgb(212, 212, 212); margin: 0px; padding: 7px 5px; font-size: 13px; line-height: 2em; min-width: 24px; vertical-align: top;">1901/2155</td><td style="border-color: rgb(212, 212, 212); margin: 0px; padding: 7px 5px; font-size: 13px; line-height: 2em; min-width: 24px; vertical-align: top;">YYYY</td><td style="border-color: rgb(212, 212, 212); margin: 0px; padding: 7px 5px; font-size: 13px; line-height: 2em; min-width: 24px; vertical-align: top;">年份值</td></tr><tr style="border: 0px; margin: 0px; padding: 0px; background-color: rgb(246, 244, 240);"><td width="10%" style="border-color: rgb(212, 212, 212); margin: 0px; padding: 7px 5px; font-size: 13px; min-width: 24px; line-height: 2em; vertical-align: top;">DATETIME</td><td width="10%" style="border-color: rgb(212, 212, 212); margin: 0px; padding: 7px 5px; font-size: 13px; line-height: 2em; min-width: 24px; vertical-align: top;">8</td><td width="40%" style="border-color: rgb(212, 212, 212); margin: 0px; padding: 7px 5px; font-size: 13px; line-height: 2em; min-width: 24px; vertical-align: top;">1000-01-01 00:00:00/9999-12-31 23:59:59</td><td style="border-color: rgb(212, 212, 212); margin: 0px; padding: 7px 5px; font-size: 13px; line-height: 2em; min-width: 24px; vertical-align: top;">YYYY-MM-DD HH:MM:SS</td><td style="border-color: rgb(212, 212, 212); margin: 0px; padding: 7px 5px; font-size: 13px; line-height: 2em; min-width: 24px; vertical-align: top;">混合日期和时间值</td></tr><tr style="border: 0px; margin: 0px; padding: 0px;"><td width="10%" style="border-color: rgb(212, 212, 212); margin: 0px; padding: 7px 5px; font-size: 13px; min-width: 24px; line-height: 2em; vertical-align: top;">TIMESTAMP</td><td width="10%" style="border-color: rgb(212, 212, 212); margin: 0px; padding: 7px 5px; font-size: 13px; line-height: 2em; min-width: 24px; vertical-align: top;">4</td><td width="40%" style="border-color: rgb(212, 212, 212); margin: 0px; padding: 7px 5px; font-size: 13px; line-height: 2em; min-width: 24px; vertical-align: top;"><p style="border: 0px; line-height: 2em; overflow-wrap: break-word; word-break: break-all;">1970-01-01 00:00:00/2038</p><p style="border: 0px; line-height: 2em; overflow-wrap: break-word; word-break: break-all;">结束时间是第&nbsp;<strong style="border: 0px; margin: 0px; padding: 0px;">2147483647</strong>&nbsp;秒，北京时间&nbsp;<strong style="border: 0px; margin: 0px; padding: 0px;">2038-1-19 11:14:07</strong>，格林尼治时间 2038年1月19日 凌晨 03:14:07</p></td><td style="border-color: rgb(212, 212, 212); margin: 0px; padding: 7px 5px; font-size: 13px; line-height: 2em; min-width: 24px; vertical-align: top;">YYYYMMDD HHMMSS</td><td style="border-color: rgb(212, 212, 212); margin: 0px; padding: 7px 5px; font-size: 13px; line-height: 2em; min-width: 24px; vertical-align: top;">混合日期和时间值，时间戳</td></tr></tbody></table><hr style="background-color: rgb(212, 212, 212); color: rgb(212, 212, 212); height: 1px; border: 0px; clear: both; font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; font-size: 12px; white-space: normal;"/><h2 style="border: 0px; margin: 2px 0px; padding: 0px; font-size: 1.8em; line-height: 1.8em; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);">字符串类型</h2><p style="border: 0px; margin-top: 0px; margin-bottom: 0px; padding: 0px; line-height: 2em; overflow-wrap: break-word; word-break: break-all; font-size: 13px; font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; color: rgb(51, 51, 51); white-space: normal; background-color: rgb(255, 255, 255);">字符串类型指CHAR、VARCHAR、BINARY、VARBINARY、BLOB、TEXT、ENUM和SET。该节描述了这些类型如何工作以及如何在查询中使用这些类型。</p><table class="reference" width="833" style="width: 768px;"><tbody style="border: 0px; margin: 0px; padding: 0px;"><tr style="border: 0px; margin: 0px; padding: 0px; background-color: rgb(246, 244, 240);" class="firstRow"><th width="20%" style="border-color: rgb(85, 85, 85); margin: 0px; padding: 3px; color: rgb(255, 255, 255); background-color: rgb(85, 85, 85); vertical-align: top; text-align: left;">类型</th><th width="25%" style="border-color: rgb(85, 85, 85); margin: 0px; padding: 3px; color: rgb(255, 255, 255); background-color: rgb(85, 85, 85); vertical-align: top; text-align: left;">大小</th><th width="55%" style="border-color: rgb(85, 85, 85); margin: 0px; padding: 3px; color: rgb(255, 255, 255); background-color: rgb(85, 85, 85); vertical-align: top; text-align: left;">用途</th></tr><tr style="border: 0px; margin: 0px; padding: 0px;"><td style="border-color: rgb(212, 212, 212); margin: 0px; padding: 7px 5px; font-size: 13px; min-width: 24px; line-height: 2em; vertical-align: top;">CHAR</td><td style="border-color: rgb(212, 212, 212); margin: 0px; padding: 7px 5px; font-size: 13px; line-height: 2em; min-width: 24px; vertical-align: top;">0-255字节</td><td style="border-color: rgb(212, 212, 212); margin: 0px; padding: 7px 5px; font-size: 13px; line-height: 2em; min-width: 24px; vertical-align: top;">定长字符串</td></tr><tr style="border: 0px; margin: 0px; padding: 0px; background-color: rgb(246, 244, 240);"><td style="border-color: rgb(212, 212, 212); margin: 0px; padding: 7px 5px; font-size: 13px; min-width: 24px; line-height: 2em; vertical-align: top;">VARCHAR</td><td style="border-color: rgb(212, 212, 212); margin: 0px; padding: 7px 5px; font-size: 13px; line-height: 2em; min-width: 24px; vertical-align: top;">0-65535 字节</td><td style="border-color: rgb(212, 212, 212); margin: 0px; padding: 7px 5px; font-size: 13px; line-height: 2em; min-width: 24px; vertical-align: top;">变长字符串</td></tr><tr style="border: 0px; margin: 0px; padding: 0px;"><td style="border-color: rgb(212, 212, 212); margin: 0px; padding: 7px 5px; font-size: 13px; min-width: 24px; line-height: 2em; vertical-align: top;">TINYBLOB</td><td style="border-color: rgb(212, 212, 212); margin: 0px; padding: 7px 5px; font-size: 13px; line-height: 2em; min-width: 24px; vertical-align: top;">0-255字节</td><td style="border-color: rgb(212, 212, 212); margin: 0px; padding: 7px 5px; font-size: 13px; line-height: 2em; min-width: 24px; vertical-align: top;">不超过 255 个字符的二进制字符串</td></tr><tr style="border: 0px; margin: 0px; padding: 0px; background-color: rgb(246, 244, 240);"><td style="border-color: rgb(212, 212, 212); margin: 0px; padding: 7px 5px; font-size: 13px; min-width: 24px; line-height: 2em; vertical-align: top;">TINYTEXT</td><td style="border-color: rgb(212, 212, 212); margin: 0px; padding: 7px 5px; font-size: 13px; line-height: 2em; min-width: 24px; vertical-align: top;">0-255字节</td><td style="border-color: rgb(212, 212, 212); margin: 0px; padding: 7px 5px; font-size: 13px; line-height: 2em; min-width: 24px; vertical-align: top;">短文本字符串</td></tr><tr style="border: 0px; margin: 0px; padding: 0px;"><td style="border-color: rgb(212, 212, 212); margin: 0px; padding: 7px 5px; font-size: 13px; min-width: 24px; line-height: 2em; vertical-align: top;">BLOB</td><td style="border-color: rgb(212, 212, 212); margin: 0px; padding: 7px 5px; font-size: 13px; line-height: 2em; min-width: 24px; vertical-align: top;">0-65 535字节</td><td style="border-color: rgb(212, 212, 212); margin: 0px; padding: 7px 5px; font-size: 13px; line-height: 2em; min-width: 24px; vertical-align: top;">二进制形式的长文本数据</td></tr><tr style="border: 0px; margin: 0px; padding: 0px; background-color: rgb(246, 244, 240);"><td style="border-color: rgb(212, 212, 212); margin: 0px; padding: 7px 5px; font-size: 13px; min-width: 24px; line-height: 2em; vertical-align: top;">TEXT</td><td style="border-color: rgb(212, 212, 212); margin: 0px; padding: 7px 5px; font-size: 13px; line-height: 2em; min-width: 24px; vertical-align: top;">0-65 535字节</td><td style="border-color: rgb(212, 212, 212); margin: 0px; padding: 7px 5px; font-size: 13px; line-height: 2em; min-width: 24px; vertical-align: top;">长文本数据</td></tr><tr style="border: 0px; margin: 0px; padding: 0px;"><td style="border-color: rgb(212, 212, 212); margin: 0px; padding: 7px 5px; font-size: 13px; min-width: 24px; line-height: 2em; vertical-align: top;">MEDIUMBLOB</td><td style="border-color: rgb(212, 212, 212); margin: 0px; padding: 7px 5px; font-size: 13px; line-height: 2em; min-width: 24px; vertical-align: top;">0-16 777 215字节</td><td style="border-color: rgb(212, 212, 212); margin: 0px; padding: 7px 5px; font-size: 13px; line-height: 2em; min-width: 24px; vertical-align: top;">二进制形式的中等长度文本数据</td></tr><tr style="border: 0px; margin: 0px; padding: 0px; background-color: rgb(246, 244, 240);"><td style="border-color: rgb(212, 212, 212); margin: 0px; padding: 7px 5px; font-size: 13px; min-width: 24px; line-height: 2em; vertical-align: top;">MEDIUMTEXT</td><td style="border-color: rgb(212, 212, 212); margin: 0px; padding: 7px 5px; font-size: 13px; line-height: 2em; min-width: 24px; vertical-align: top;">0-16 777 215字节</td><td style="border-color: rgb(212, 212, 212); margin: 0px; padding: 7px 5px; font-size: 13px; line-height: 2em; min-width: 24px; vertical-align: top;">中等长度文本数据</td></tr><tr style="border: 0px; margin: 0px; padding: 0px;"><td style="border-color: rgb(212, 212, 212); margin: 0px; padding: 7px 5px; font-size: 13px; min-width: 24px; line-height: 2em; vertical-align: top;">LONGBLOB</td><td style="border-color: rgb(212, 212, 212); margin: 0px; padding: 7px 5px; font-size: 13px; line-height: 2em; min-width: 24px; vertical-align: top;">0-4 294 967 295字节</td><td style="border-color: rgb(212, 212, 212); margin: 0px; padding: 7px 5px; font-size: 13px; line-height: 2em; min-width: 24px; vertical-align: top;">二进制形式的极大文本数据</td></tr><tr style="border: 0px; margin: 0px; padding: 0px; background-color: rgb(246, 244, 240);"><td style="border-color: rgb(212, 212, 212); margin: 0px; padding: 7px 5px; font-size: 13px; min-width: 24px; line-height: 2em; vertical-align: top;">LONGTEXT</td><td style="border-color: rgb(212, 212, 212); margin: 0px; padding: 7px 5px; font-size: 13px; line-height: 2em; min-width: 24px; vertical-align: top;">0-4 294 967 295字节</td><td style="border-color: rgb(212, 212, 212); margin: 0px; padding: 7px 5px; font-size: 13px; line-height: 2em; min-width: 24px; vertical-align: top;">极大文本数据</td></tr></tbody></table><p style="border: 0px; margin-top: 0px; margin-bottom: 0px; padding: 0px; line-height: 2em; overflow-wrap: break-word; word-break: break-all; font-size: 13px; font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; color: rgb(51, 51, 51); white-space: normal; background-color: rgb(255, 255, 255);">CHAR 和 VARCHAR 类型类似，但它们保存和检索的方式不同。它们的最大长度和是否尾部空格被保留等方面也不同。在存储或检索过程中不进行大小写转换。</p><p style="border: 0px; margin-top: 0px; margin-bottom: 0px; padding: 0px; line-height: 2em; overflow-wrap: break-word; word-break: break-all; font-size: 13px; font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; color: rgb(51, 51, 51); white-space: normal; background-color: rgb(255, 255, 255);">BINARY 和 VARBINARY 类似于 CHAR 和 VARCHAR，不同的是它们包含二进制字符串而不要非二进制字符串。也就是说，它们包含字节字符串而不是字符字符串。这说明它们没有字符集，并且排序和比较基于列值字节的数值值。</p><p style="border: 0px; margin-top: 0px; margin-bottom: 0px; padding: 0px; line-height: 2em; overflow-wrap: break-word; word-break: break-all; font-size: 13px; font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; color: rgb(51, 51, 51); white-space: normal; background-color: rgb(255, 255, 255);">BLOB 是一个二进制大对象，可以容纳可变数量的数据。有 4 种 BLOB 类型：TINYBLOB、BLOB、MEDIUMBLOB 和 LONGBLOB。它们区别在于可容纳存储范围不同。</p><p style="border: 0px; margin-top: 0px; margin-bottom: 0px; padding: 0px; line-height: 2em; overflow-wrap: break-word; word-break: break-all; font-size: 13px; font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; color: rgb(51, 51, 51); white-space: normal; background-color: rgb(255, 255, 255);">有 4 种 TEXT 类型：TINYTEXT、TEXT、MEDIUMTEXT 和 LONGTEXT。对应的这 4 种 BLOB 类型，可存储的最大长度不同，可根据实际情况选择</p><p><br/></p>');
DELETE FROM sqlite_sequence;
INSERT INTO sqlite_sequence VALUES('django_migrations',19);
INSERT INTO sqlite_sequence VALUES('django_admin_log',15);
INSERT INTO sqlite_sequence VALUES('django_content_type',12);
INSERT INTO sqlite_sequence VALUES('auth_permission',48);
INSERT INTO sqlite_sequence VALUES('auth_user',1);
INSERT INTO sqlite_sequence VALUES('auth_group',0);
INSERT INTO sqlite_sequence VALUES('blog_category',8);
INSERT INTO sqlite_sequence VALUES('blog_banner',8);
INSERT INTO sqlite_sequence VALUES('blog_tag',3);
INSERT INTO sqlite_sequence VALUES('blog_tui',2);
INSERT INTO sqlite_sequence VALUES('blog_article_tags',4);
INSERT INTO sqlite_sequence VALUES('blog_article',6);
INSERT INTO sqlite_sequence VALUES('blog_link',1);
CREATE UNIQUE INDEX "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" ON "auth_group_permissions" ("group_id", "permission_id");
CREATE INDEX "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id");
CREATE INDEX "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id");
CREATE UNIQUE INDEX "auth_user_groups_user_id_group_id_94350c0c_uniq" ON "auth_user_groups" ("user_id", "group_id");
CREATE INDEX "auth_user_groups_user_id_6a12ed8b" ON "auth_user_groups" ("user_id");
CREATE INDEX "auth_user_groups_group_id_97559544" ON "auth_user_groups" ("group_id");
CREATE UNIQUE INDEX "auth_user_user_permissions_user_id_permission_id_14a6b632_uniq" ON "auth_user_user_permissions" ("user_id", "permission_id");
CREATE INDEX "auth_user_user_permissions_user_id_a95ead1b" ON "auth_user_user_permissions" ("user_id");
CREATE INDEX "auth_user_user_permissions_permission_id_1fbb5f2c" ON "auth_user_user_permissions" ("permission_id");
CREATE INDEX "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id");
CREATE INDEX "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id");
CREATE UNIQUE INDEX "django_content_type_app_label_model_76bd3d3b_uniq" ON "django_content_type" ("app_label", "model");
CREATE UNIQUE INDEX "auth_permission_content_type_id_codename_01ab375a_uniq" ON "auth_permission" ("content_type_id", "codename");
CREATE INDEX "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id");
CREATE UNIQUE INDEX "blog_article_tags_article_id_tag_id_b78a22e9_uniq" ON "blog_article_tags" ("article_id", "tag_id");
CREATE INDEX "blog_article_tags_article_id_82c02dd6" ON "blog_article_tags" ("article_id");
CREATE INDEX "blog_article_tags_tag_id_88eb3ed9" ON "blog_article_tags" ("tag_id");
CREATE INDEX "django_session_expire_date_a5c62663" ON "django_session" ("expire_date");
CREATE INDEX "blog_article_category_id_7e38f15e" ON "blog_article" ("category_id");
CREATE INDEX "blog_article_tui_id_d498cd9f" ON "blog_article" ("tui_id");
CREATE INDEX "blog_article_user_id_5beb0cc1" ON "blog_article" ("user_id");
COMMIT;



